<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-09-12T14:56:39-04:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Josh Johnson’s Personal Site</title><subtitle>A blog/personal site to write stuff about computers, languages (human and robot), traveling, food, and whatever else I happen to find interesting at the moment.</subtitle><entry><title type="html">Visualizing Login Attempts</title><link href="http://localhost:4000/digital-ocean/login/cron/2020/09/12/visualizing-login-attemps.html" rel="alternate" type="text/html" title="Visualizing Login Attempts" /><published>2020-09-12T10:28:00-04:00</published><updated>2020-09-12T10:28:00-04:00</updated><id>http://localhost:4000/digital-ocean/login/cron/2020/09/12/visualizing-login-attemps</id><content type="html" xml:base="http://localhost:4000/digital-ocean/login/cron/2020/09/12/visualizing-login-attemps.html">&lt;p&gt;In my &lt;a href=&quot;/digital-ocean/login/2020/09/12/who's-knocking.html&quot;&gt;previous post&lt;/a&gt;, I created a simple script to figure out which countries had people trying to login to my server. I’d have to manually ssh in to my server, copy + paste this script, and then run it to see what I wanted to see. I decided I wanted to be able to check up on this from a web browser, so I went ahead and made that happen.&lt;/p&gt;

&lt;p&gt;First thing’s first, I installed Apache and made sure I could hit my server.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2020-09-12-14-31-45.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then I experimented with cron jobs, because I hadn’t ever set one up before. There were a couple gotchas:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You won’t see the output unless you route it somewhere else. I had &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;date&lt;/code&gt; set to run every minute, but nothing happened until I redirected output to a log file.&lt;/li&gt;
  &lt;li&gt;You need to give a path to the script if you’re running it. For some reason I thought I could just say &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;firstCron.sh&lt;/code&gt; instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/firstCron.sh&lt;/code&gt;, so this one was a very simple mistake.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* * * * * date &amp;gt;&amp;gt; ~/simple.log
* * * * * ~/firstCron.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Some useful commands are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;crontab -l&lt;/code&gt; to list your crontab file&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;crontab -e&lt;/code&gt; to edit your crontab file&lt;/li&gt;
  &lt;li&gt;Prepending &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo&lt;/code&gt; to the above commands to have root run your cron jobs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I set up a cron job to run every hour that gets the IPs, looks their geography up, sorts the output, counts the unique countries, writes this out to a file, and puts that file on the server at /logins (location subject to change). The result looks like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2020-09-12-14-54-04.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nothing crazy, but it is far more convenient that it was before to see who is trying to log in.&lt;/p&gt;</content><author><name></name></author><category term="digital-ocean" /><category term="login" /><category term="cron" /><summary type="html">In my previous post, I created a simple script to figure out which countries had people trying to login to my server. I’d have to manually ssh in to my server, copy + paste this script, and then run it to see what I wanted to see. I decided I wanted to be able to check up on this from a web browser, so I went ahead and made that happen.</summary></entry><entry><title type="html">Who’s Knocking at my Door?</title><link href="http://localhost:4000/digital-ocean/login/2020/09/12/who's-knocking.html" rel="alternate" type="text/html" title="Who’s Knocking at my Door?" /><published>2020-09-12T00:00:00-04:00</published><updated>2020-09-12T00:00:00-04:00</updated><id>http://localhost:4000/digital-ocean/login/2020/09/12/who's-knocking</id><content type="html" xml:base="http://localhost:4000/digital-ocean/login/2020/09/12/who's-knocking.html">&lt;p&gt;As part of the Linux Up Skill Challenge, you set up your own server and expose it to the world. This comes with some risks because people (or bots, whatever…) will immediately start trying to log in and take control of your server. I was curious as to how many people would be trying to login and from where, so I wrote a simple and inelegant bash script to show me.&lt;/p&gt;

&lt;noscript&gt;&lt;pre&gt;400: Invalid request&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/c036fe136e42c2c3fdab5d4792d639c4.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;In the mere 16 hours, I’ve had over 10,000 login attempts!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2020-09-12-05-43-14.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can check out the country codes with this &lt;a href=&quot;https://www.iban.com/country-codes&quot;&gt;website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Also with this post I figured out how to embed gists for easy code viewing - &lt;a href=&quot;https://github.com/jekyll/jekyll-gist&quot;&gt;Jekyll Gist&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="digital-ocean" /><category term="login" /><summary type="html">As part of the Linux Up Skill Challenge, you set up your own server and expose it to the world. This comes with some risks because people (or bots, whatever…) will immediately start trying to log in and take control of your server. I was curious as to how many people would be trying to login and from where, so I wrote a simple and inelegant bash script to show me.</summary></entry><entry><title type="html">A New Blog!</title><link href="http://localhost:4000/jekyll/blog/2020/09/11/a-new-blog.html" rel="alternate" type="text/html" title="A New Blog!" /><published>2020-09-11T00:00:00-04:00</published><updated>2020-09-11T00:00:00-04:00</updated><id>http://localhost:4000/jekyll/blog/2020/09/11/a-new-blog</id><content type="html" xml:base="http://localhost:4000/jekyll/blog/2020/09/11/a-new-blog.html">&lt;p&gt;Hello there! There is my new blog and hopefully my new personal website. I wanted to go with this format because I have a few different topics I want to write about and keep track of. I don’t have a writing cadence at the moment, but I’m picturing a new post every day or so, at least until I run out of ideas.&lt;/p&gt;

&lt;p&gt;I have a few ideas at the moment including:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Setting up this blog&lt;/li&gt;
  &lt;li&gt;My experience with Jekyll as someone who hasn’t used Ruby&lt;/li&gt;
  &lt;li&gt;How I learned to cook&lt;/li&gt;
  &lt;li&gt;Setting up a DigitalOcean Droplet + learning some of the ins and outs of managing a server&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’m sure there’ll be more, but for now I’ve gotta make sure I can make this page go live!&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="blog" /><summary type="html">Hello there! There is my new blog and hopefully my new personal website. I wanted to go with this format because I have a few different topics I want to write about and keep track of. I don’t have a writing cadence at the moment, but I’m picturing a new post every day or so, at least until I run out of ideas.</summary></entry><entry><title type="html">Setting up a Jekyll Blog with Github Pages</title><link href="http://localhost:4000/jekyll/blog/github-pages/2020/09/11/setting-up-a-blog.html" rel="alternate" type="text/html" title="Setting up a Jekyll Blog with Github Pages" /><published>2020-09-11T00:00:00-04:00</published><updated>2020-09-11T00:00:00-04:00</updated><id>http://localhost:4000/jekyll/blog/github-pages/2020/09/11/setting-up-a-blog</id><content type="html" xml:base="http://localhost:4000/jekyll/blog/github-pages/2020/09/11/setting-up-a-blog.html">&lt;p&gt;So I finally got around to setting up a personal website about a week ago and it looked very nice (I used a template which handled the styling and the mobile compatibility), but it wasn’t really what I was hoping to get out of a personal website. I sort of threw it up there as an electronic business card, but what I’m hoping for is a very casual blog that won’t require a lot (or any, preferably) maintenance.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt; is a good candidate because it is free and there’s a bunch of tutorials for getting it up and ready. I ran the &lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;quickstart&lt;/a&gt; and read some of the docs and was up and running pretty quickly. Because it’s on Github Pages, you can view the public repo &lt;a href=&quot;https://github.com/joshuaj004/joshuaj004.github.io&quot;&gt;here&lt;/a&gt;. There really isn’t that much to it, you just create a new file and Jekyll handles all the generating of the relevant files.&lt;/p&gt;

&lt;h3 id=&quot;future-work&quot;&gt;Future Work&lt;/h3&gt;

&lt;p&gt;I might decide to switch up how the blog looks and use a theme. It seems there are tons of them available, but I don’t wanna spend too much time before I’m sure that I’ll stick with this blog.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="blog" /><category term="github-pages" /><summary type="html">So I finally got around to setting up a personal website about a week ago and it looked very nice (I used a template which handled the styling and the mobile compatibility), but it wasn’t really what I was hoping to get out of a personal website. I sort of threw it up there as an electronic business card, but what I’m hoping for is a very casual blog that won’t require a lot (or any, preferably) maintenance.</summary></entry><entry><title type="html">Setting up Digital Ocean</title><link href="http://localhost:4000/digital-ocean/2020/09/11/setting-up-digital-ocean.html" rel="alternate" type="text/html" title="Setting up Digital Ocean" /><published>2020-09-11T00:00:00-04:00</published><updated>2020-09-11T00:00:00-04:00</updated><id>http://localhost:4000/digital-ocean/2020/09/11/setting-up-digital-ocean</id><content type="html" xml:base="http://localhost:4000/digital-ocean/2020/09/11/setting-up-digital-ocean.html">&lt;p&gt;I will be starting the &lt;a href=&quot;https://github.com/snori74/linuxupskillchallenge&quot;&gt;Linux Up Skill Challenge&lt;/a&gt; which I hope will make me more comfortable with managing a server. I’ve already used up my AWS Free Tier credits (doing who knows what years ago), but Digital Ocean is running a promo offering $100 credits over 60 days so I signed up for that. A droplet at the smallest tier only costs $5/month so I’ll have to find some way to use up the other $90 worth of credits.&lt;/p&gt;

&lt;p&gt;Digital Ocean has a nice wizard to guide you through the set up and they even send a follow up email that lists some of the best practices which I thought was neat.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/2020-09-11-13-07-34.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I also learned how to add images with this post which was cool 😎&lt;/p&gt;</content><author><name></name></author><category term="digital-ocean" /><summary type="html">I will be starting the Linux Up Skill Challenge which I hope will make me more comfortable with managing a server. I’ve already used up my AWS Free Tier credits (doing who knows what years ago), but Digital Ocean is running a promo offering $100 credits over 60 days so I signed up for that. A droplet at the smallest tier only costs $5/month so I’ll have to find some way to use up the other $90 worth of credits.</summary></entry></feed>